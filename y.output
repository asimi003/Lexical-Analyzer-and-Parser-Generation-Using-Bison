Grammar

    0 $accept: start $end

    1 start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements ENDBODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ENUM L_PAREN identifiers R_PAREN

   10 identifiers: ident
   11            | ident COMMA identifiers

   12 ident: IDENT

   13 statements: statement SEMICOLON
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_expr THEN statements ENDIF
   17          | IF bool_expr THEN statements ELSE statements ENDIF
   18          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   20          | READ var_list
   21          | WRITE var_list
   22          | CONTINUE
   23          | RETURN expression

   24 bool_expr: relation_and_expr
   25          | relation_and_expr OR bool_expr

   26 relation_and_expr: relation_expr
   27                  | relation_expr AND relation_and_expr

   28 relation_expr: relation_sub
   29              | NOT relation_sub

   30 relation_sub: expression comp expression
   31             | TRUE
   32             | FALSE
   33             | L_PAREN bool_expr R_PAREN

   34 comp: EQ
   35     | NEQ
   36     | LT
   37     | GT
   38     | LTE
   39     | GTE

   40 var: ident
   41    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   42 var_list: var
   43         | var COMMA var_list

   44 expression: multiplicative_expr
   45           | multiplicative_expr PLUS expression
   46           | multiplicative_expr SUB expression

   47 multiplicative_expr: term
   48                    | term MULT multiplicative_expr
   49                    | term DIV multiplicative_expr
   50                    | term MOD multiplicative_expr

   51 term: var
   52     | SUB var
   53     | NUMBER
   54     | SUB NUMBER
   55     | L_PAREN expression R_PAREN
   56     | SUB L_PAREN expression R_PAREN
   57     | ident L_PAREN expressions R_PAREN
   58     | ident L_PAREN R_PAREN

   59 expressions: expression
   60            | expression COMMA expressions


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
INTEGER (263) 7 8
ARRAY (264) 8
ENUM (265) 9
OF (266) 8
IF (267) 16 17
THEN (268) 16 17
ENDIF (269) 16 17
ELSE (270) 17
WHILE (271) 18 19
DO (272) 19
BEGINLOOP (273) 18 19
ENDLOOP (274) 18 19
CONTINUE (275) 22
READ (276) 20
WRITE (277) 21
AND (278) 27
OR (279) 25
NOT (280) 29
TRUE (281) 31
FALSE (282) 32
RETURN (283) 23
BEGINBODY (284) 4
ENDBODY (285) 4
SUB (286) 46 52 54 56
PLUS (287) 45
MULT (288) 48
DIV (289) 49
MOD (290) 50
EQ (291) 34
NEQ (292) 35
LT (293) 36
GT (294) 37
LTE (295) 38
GTE (296) 39
SEMICOLON (297) 4 6 13 14
COLON (298) 7 8 9
COMMA (299) 11 43 60
L_PAREN (300) 9 33 55 56 57 58
R_PAREN (301) 9 33 55 56 57 58
L_SQUARE_BRACKET (302) 8 41
R_SQUARE_BRACKET (303) 8 41
ASSIGN (304) 15
IDENT (305) 12
NUMBER (306) 8 53 54


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8 9, on right: 6
identifiers (58)
    on left: 10 11, on right: 7 8 9 11
ident (59)
    on left: 12, on right: 4 10 11 40 41 57 58
statements (60)
    on left: 13 14, on right: 4 14 16 17 18 19
statement (61)
    on left: 15 16 17 18 19 20 21 22 23, on right: 13 14
bool_expr (62)
    on left: 24 25, on right: 16 17 18 19 25 33
relation_and_expr (63)
    on left: 26 27, on right: 24 25 27
relation_expr (64)
    on left: 28 29, on right: 26 27
relation_sub (65)
    on left: 30 31 32 33, on right: 28 29
comp (66)
    on left: 34 35 36 37 38 39, on right: 30
var (67)
    on left: 40 41, on right: 15 42 43 51 52
var_list (68)
    on left: 42 43, on right: 20 21 43
expression (69)
    on left: 44 45 46, on right: 15 23 30 41 45 46 55 56 59 60
multiplicative_expr (70)
    on left: 47 48 49 50, on right: 44 45 46 48 49 50
term (71)
    on left: 51 52 53 54 55 56 57 58, on right: 47 48 49 50
expressions (72)
    on left: 59 60, on right: 57 60


State 0

    0 $accept: . start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    start      go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: start . $end

    $end  shift, and go to state 7


State 3

    1 start: functions .

    $default  reduce using rule 1 (start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   12 ident: IDENT .

    $default  reduce using rule 12 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements ENDBODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements ENDBODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN

    COLON  shift, and go to state 17


State 14

   10 identifiers: ident .
   11            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 10 (identifiers)


State 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements ENDBODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22
    ENUM     shift, and go to state 23


State 18

   11 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 24
    ident        go to state 14


State 19

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

    9 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 27


State 24

   11 identifiers: ident COMMA identifiers .

    $default  reduce using rule 11 (identifiers)


State 25

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGINBODY statements ENDBODY

    END_LOCALS  shift, and go to state 28


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    9 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 5

    identifiers  go to state 30
    ident        go to state 14


State 28

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 31


State 29

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

    9 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 33


State 31

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 42
    statement   go to state 43
    var         go to state 44


State 32

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 33

    9 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 9 (declaration)


State 34

   16 statement: IF . bool_expr THEN statements ENDIF
   17          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    bool_expr            go to state 53
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    relation_sub         go to state 56
    var                  go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 35

   18 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    bool_expr            go to state 61
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    relation_sub         go to state 56
    var                  go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 36

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 62


State 37

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 38

   20 statement: READ . var_list

    IDENT  shift, and go to state 5

    ident     go to state 41
    var       go to state 63
    var_list  go to state 64


State 39

   21 statement: WRITE . var_list

    IDENT  shift, and go to state 5

    ident     go to state 41
    var       go to state 63
    var_list  go to state 65


State 40

   23 statement: RETURN . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 67
    multiplicative_expr  go to state 59
    term                 go to state 60


State 41

   40 var: ident .
   41    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 40 (var)


State 42

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 69


State 43

   13 statements: statement . SEMICOLON
   14           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 70


State 44

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 45

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 46

   29 relation_expr: NOT . relation_sub

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    relation_sub         go to state 73
    var                  go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 47

   31 relation_sub: TRUE .

    $default  reduce using rule 31 (relation_sub)


State 48

   32 relation_sub: FALSE .

    $default  reduce using rule 32 (relation_sub)


State 49

   52 term: SUB . var
   54     | SUB . NUMBER
   56     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 75

    ident  go to state 41
    var    go to state 76


State 50

   33 relation_sub: L_PAREN . bool_expr R_PAREN
   55 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    bool_expr            go to state 77
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    relation_sub         go to state 56
    var                  go to state 57
    expression           go to state 78
    multiplicative_expr  go to state 59
    term                 go to state 60


State 51

   53 term: NUMBER .

    $default  reduce using rule 53 (term)


State 52

   40 var: ident .
   41    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   57 term: ident . L_PAREN expressions R_PAREN
   58     | ident . L_PAREN R_PAREN

    L_PAREN           shift, and go to state 79
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 40 (var)


State 53

   16 statement: IF bool_expr . THEN statements ENDIF
   17          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 80


State 54

   24 bool_expr: relation_and_expr .
   25          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 81

    $default  reduce using rule 24 (bool_expr)


State 55

   26 relation_and_expr: relation_expr .
   27                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 82

    $default  reduce using rule 26 (relation_and_expr)


State 56

   28 relation_expr: relation_sub .

    $default  reduce using rule 28 (relation_expr)


State 57

   51 term: var .

    $default  reduce using rule 51 (term)


State 58

   30 relation_sub: expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 89


State 59

   44 expression: multiplicative_expr .
   45           | multiplicative_expr . PLUS expression
   46           | multiplicative_expr . SUB expression

    SUB   shift, and go to state 90
    PLUS  shift, and go to state 91

    $default  reduce using rule 44 (expression)


State 60

   47 multiplicative_expr: term .
   48                    | term . MULT multiplicative_expr
   49                    | term . DIV multiplicative_expr
   50                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 47 (multiplicative_expr)


State 61

   18 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 95


State 62

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 96
    statement   go to state 43
    var         go to state 44


State 63

   42 var_list: var .
   43         | var . COMMA var_list

    COMMA  shift, and go to state 97

    $default  reduce using rule 42 (var_list)


State 64

   20 statement: READ var_list .

    $default  reduce using rule 20 (statement)


State 65

   21 statement: WRITE var_list .

    $default  reduce using rule 21 (statement)


State 66

   55 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 98
    multiplicative_expr  go to state 59
    term                 go to state 60


State 67

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 68

   41 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 99
    multiplicative_expr  go to state 59
    term                 go to state 60


State 69

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 70

   13 statements: statement SEMICOLON .
   14           | statement SEMICOLON . statements

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 13 (statements)

    ident       go to state 41
    statements  go to state 100
    statement   go to state 43
    var         go to state 44


State 71

   15 statement: var ASSIGN . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 101
    multiplicative_expr  go to state 59
    term                 go to state 60


State 72

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 73

   29 relation_expr: NOT relation_sub .

    $default  reduce using rule 29 (relation_expr)


State 74

   56 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 102
    multiplicative_expr  go to state 59
    term                 go to state 60


State 75

   54 term: SUB NUMBER .

    $default  reduce using rule 54 (term)


State 76

   52 term: SUB var .

    $default  reduce using rule 52 (term)


State 77

   33 relation_sub: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 103


State 78

   30 relation_sub: expression . comp expression
   55 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    LTE      shift, and go to state 87
    GTE      shift, and go to state 88
    R_PAREN  shift, and go to state 104

    comp  go to state 89


State 79

   57 term: ident L_PAREN . expressions R_PAREN
   58     | ident L_PAREN . R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    R_PAREN  shift, and go to state 105
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 106
    multiplicative_expr  go to state 59
    term                 go to state 60
    expressions          go to state 107


State 80

   16 statement: IF bool_expr THEN . statements ENDIF
   17          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 108
    statement   go to state 43
    var         go to state 44


State 81

   25 bool_expr: relation_and_expr OR . bool_expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    bool_expr            go to state 109
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    relation_sub         go to state 56
    var                  go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 82

   27 relation_and_expr: relation_expr AND . relation_and_expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    relation_and_expr    go to state 110
    relation_expr        go to state 55
    relation_sub         go to state 56
    var                  go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 83

   34 comp: EQ .

    $default  reduce using rule 34 (comp)


State 84

   35 comp: NEQ .

    $default  reduce using rule 35 (comp)


State 85

   36 comp: LT .

    $default  reduce using rule 36 (comp)


State 86

   37 comp: GT .

    $default  reduce using rule 37 (comp)


State 87

   38 comp: LTE .

    $default  reduce using rule 38 (comp)


State 88

   39 comp: GTE .

    $default  reduce using rule 39 (comp)


State 89

   30 relation_sub: expression comp . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 111
    multiplicative_expr  go to state 59
    term                 go to state 60


State 90

   46 expression: multiplicative_expr SUB . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 112
    multiplicative_expr  go to state 59
    term                 go to state 60


State 91

   45 expression: multiplicative_expr PLUS . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 113
    multiplicative_expr  go to state 59
    term                 go to state 60


State 92

   48 multiplicative_expr: term MULT . multiplicative_expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    multiplicative_expr  go to state 114
    term                 go to state 60


State 93

   49 multiplicative_expr: term DIV . multiplicative_expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    multiplicative_expr  go to state 115
    term                 go to state 60


State 94

   50 multiplicative_expr: term MOD . multiplicative_expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    multiplicative_expr  go to state 116
    term                 go to state 60


State 95

   18 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 117
    statement   go to state 43
    var         go to state 44


State 96

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 118


State 97

   43 var_list: var COMMA . var_list

    IDENT  shift, and go to state 5

    ident     go to state 41
    var       go to state 63
    var_list  go to state 119


State 98

   55 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 104


State 99

   41 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 120


State 100

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 101

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 102

   56 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 121


State 103

   33 relation_sub: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 33 (relation_sub)


State 104

   55 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 55 (term)


State 105

   58 term: ident L_PAREN R_PAREN .

    $default  reduce using rule 58 (term)


State 106

   59 expressions: expression .
   60            | expression . COMMA expressions

    COMMA  shift, and go to state 122

    $default  reduce using rule 59 (expressions)


State 107

   57 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 123


State 108

   16 statement: IF bool_expr THEN statements . ENDIF
   17          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 124
    ELSE   shift, and go to state 125


State 109

   25 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 25 (bool_expr)


State 110

   27 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 27 (relation_and_expr)


State 111

   30 relation_sub: expression comp expression .

    $default  reduce using rule 30 (relation_sub)


State 112

   46 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 46 (expression)


State 113

   45 expression: multiplicative_expr PLUS expression .

    $default  reduce using rule 45 (expression)


State 114

   48 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 48 (multiplicative_expr)


State 115

   49 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 49 (multiplicative_expr)


State 116

   50 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 50 (multiplicative_expr)


State 117

   18 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 118

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 127


State 119

   43 var_list: var COMMA var_list .

    $default  reduce using rule 43 (var_list)


State 120

   41 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 41 (var)


State 121

   56 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term)


State 122

   60 expressions: expression COMMA . expressions

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    var                  go to state 57
    expression           go to state 106
    multiplicative_expr  go to state 59
    term                 go to state 60
    expressions          go to state 128


State 123

   57 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 57 (term)


State 124

   16 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 125

   17 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 129
    statement   go to state 43
    var         go to state 44


State 126

   18 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 127

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    ident                go to state 52
    bool_expr            go to state 130
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    relation_sub         go to state 56
    var                  go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 128

   60 expressions: expression COMMA expressions .

    $default  reduce using rule 60 (expressions)


State 129

   17 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 131


State 130

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 19 (statement)


State 131

   17 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)
